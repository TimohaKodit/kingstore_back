# from pydantic import BaseModel, Field
# from typing import Optional

# # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ö–µ–º—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
# from .category import Category as CategorySchema 

# # –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞
# class ItemBase(BaseModel):
#     name: str = Field(..., max_length=100)
#     description: Optional[str] = None
#     price: float = Field(..., gt=0)
#     image_url: Optional[str] = None
#     is_active: bool = True
    
#     # --- –ù–û–í–´–ï –ü–û–õ–Ø ---
#     category_id: int # ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
#     memory: Optional[str] = None
#     color: Optional[str] = None

# # –°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (POST –∑–∞–ø—Ä–æ—Å—ã)
# class ItemCreate(ItemBase):
#     pass

# # –°—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (PUT/PATCH –∑–∞–ø—Ä–æ—Å—ã)
# class ItemUpdate(ItemBase):
#     name: Optional[str] = None
#     price: Optional[float] = None
#     category_id: Optional[int] = None # –¢–µ–ø–µ—Ä—å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
#     # –í—Å–µ –ø–æ–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏

# # –°—Ö–µ–º–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è (–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—É)
# class Item(ItemBase):
#     id: int 
#     # –ó–∞–º–µ–Ω—è–µ–º category_id –Ω–∞ –ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç Category –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
#     category: CategorySchema # <--- –ü–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

#     # –£–¥–∞–ª—è–µ–º –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–ø–µ—Ä—å –≤–ª–æ–∂–µ–Ω—ã –≤ category
#     # category_id –Ω–µ –Ω—É–∂–Ω–æ —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `category`

#     class Config:
#         from_attributes = True
from pydantic import BaseModel, Field
from typing import Optional, List

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ö–µ–º—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
from .category import Category as CategorySchema 

# –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞
class ItemBase(BaseModel):
    name: str = Field(..., max_length=100)
    description: Optional[str] = None
    price: float = Field(..., gt=0)
    # üí° –ò–∑–º–µ–Ω–∏–ª–∏: –¢–µ–ø–µ—Ä—å —ç—Ç–æ —Å–ø–∏—Å–æ–∫ URL-–∞–¥—Ä–µ—Å–æ–≤, –∞ –Ω–µ –æ–¥–∏–Ω URL
    image_urls: List[str] = Field(default_factory=list, description="–°–ø–∏—Å–æ–∫ URL-–∞–¥—Ä–µ—Å–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    is_active: bool = True
    
    category_id: int 
    memory: Optional[str] = None
    color: Optional[str] = None

# –°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (POST –∑–∞–ø—Ä–æ—Å—ã)
class ItemCreate(ItemBase):
    pass

# –°—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (PUT/PATCH –∑–∞–ø—Ä–æ—Å—ã)
class ItemUpdate(ItemBase):
    name: Optional[str] = None
    price: Optional[float] = None
    category_id: Optional[int] = None
    is_active: Optional[bool] = None 
    # image_urls —Ç–µ–ø–µ—Ä—å —Ç–∞–∫–∂–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    image_urls: Optional[List[str]] = Field(None, description="–°–ø–∏—Å–æ–∫ URL-–∞–¥—Ä–µ—Å–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")

# –°—Ö–µ–º–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è (–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—É)
class Item(ItemBase):
    id: int 
    category: CategorySchema 

    class Config:
        from_attributes = True

# ---------------------------------------------------------
# –°—Ö–µ–º—ã –¥–ª—è –ó–∞–∫–∞–∑–æ–≤ (–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
# ---------------------------------------------------------
class FrontendItemDetails(BaseModel):
    name: str
    price: float
    memory: Optional[str] = None
    color: Optional[str] = None

class OrderSubmission(BaseModel):
    fio: str = Field(..., description="–§–ò–û –∫–ª–∏–µ–Ω—Ç–∞")
    phone: str = Field(..., description="–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞")
    email: str = Field(..., description="–ü–æ—á—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞")
    telegram_username: Optional[str] = Field(None, description="–ù–∏–∫–Ω–µ–π–º –≤ Telegram")
    address: str = Field(..., description="–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ '–°–∞–º–æ–≤—ã–≤–æ–∑'")
    comment: Optional[str] = Field(None, description="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞–∫–∞–∑—É")
    delivery_method: str = Field(..., description="–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è ('delivery' –∏–ª–∏ 'pickup')")
    total_price: float = Field(..., description="–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞")
    items: List[FrontendItemDetails]

