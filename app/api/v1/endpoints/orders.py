import httpx
import logging
from fastapi import APIRouter, Depends, HTTPException, status
from pydantic import ValidationError

# –ò–ú–ü–û–†–¢–ò–†–£–ï–ú OrderSubmission - —ç—Ç–æ –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞!
from app.schemas.order import OrderSubmission, OrderCreate
from app.core.config import settings 

router = APIRouter()
logger = logging.getLogger(__name__)

# URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram API
TELEGRAM_API_URL = f"https://api.telegram.org/bot{settings.BOT_TOKEN}/sendMessage"

def format_order_message(order_data: OrderSubmission, order_id: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è OrderSubmission."""
    # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ OrderSubmission
    
    items_list = ""
    for item in order_data.items:
        options = []
        if item.memory and item.memory != '-':
            options.append(item.memory)
        if item.color and item.color != '-':
            options.append(item.color)
        
        options_str = f" ({', '.join(options)})" if options else ""
        # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: item.price —É–∂–µ —á–∏—Å–ª–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        items_list += f"‚Äî {item.name}{options_str} **{item.price:,.0f} ‚ÇΩ**\n" 
        
    delivery_str = "–î–æ—Å—Ç–∞–≤–∫–∞" if order_data.delivery_method == 'delivery' else "–°–∞–º–æ–≤—ã–≤–æ–∑"
    comment_str = order_data.comment or "–ù–µ—Ç"
    telegram_str = f"üë§ Telegram: @{order_data.telegram_username.lstrip('@')}\n" if order_data.telegram_username else ""
    message = (
        f"üîî *–ù–û–í–´–ô –ó–ê–ö–ê–ó* (ID: {order_id}) üîî\n\n"
        f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {order_data.fio}\n" 
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: `{order_data.phone}`\n" 
        f"üìß –ü–æ—á—Ç–∞: {order_data.email}\n" 
        f"{telegram_str}\n" # –í–ö–õ–Æ–ß–ê–ï–ú –ù–ò–ö–ù–ï–ô–ú
        f"üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ: {delivery_str}\n"
        f"üè† –ê–¥—Ä–µ—Å: {order_data.address}\n\n"
        f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment_str}\n"
        f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
        f"*üõí –¢–æ–≤–∞—Ä—ã (–ò—Ç–æ–≥–æ: {len(order_data.items)} –ø–æ–∑–∏—Ü–∏–π):*\n{items_list}\n"
        f"üí∞ *–û–ë–©–ê–Ø –°–£–ú–ú–ê:* **{order_data.total_price:,.0f} ‚ÇΩ**"
    )
    return message


@router.post("/orders/submit", status_code=status.HTTP_201_CREATED) # –ò–ó–ú–ï–ù–Ø–ï–ú URL –Ω–∞ /orders/submit
async def submit_order(order: OrderSubmission): # –ò–ó–ú–ï–ù–Ø–ï–ú –¢–ò–ü –ù–ê OrderSubmission
    
    # 1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ ID (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ë–î)
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö—ç—à–∞
    new_order_id = abs(hash(order.phone + order.fio)) % 100000 

    # 2. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    try:
        message_text = format_order_message(order, new_order_id)
        
        async with httpx.AsyncClient() as client:
            response = await client.post(
                TELEGRAM_API_URL,
                json={
                    "chat_id": settings.ADMIN_ID, 
                    "text": message_text,
                    "parse_mode": "Markdown"
                }
            )
            response.raise_for_status()
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ {new_order_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É.")
            
    except httpx.HTTPStatusError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram: {e.response.text}")
    except Exception as e:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

    # 3. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
    return {"message": "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω", "order_id": new_order_id}