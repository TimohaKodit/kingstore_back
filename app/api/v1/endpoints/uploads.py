import os
import uuid
import logging
from typing import List, Optional

# üí° –ù–û–í–´–ô –ò–ú–ü–û–†–¢: aiofiles –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
import aiofiles 
from fastapi import APIRouter, File, UploadFile, HTTPException, status, Request
from fastapi.responses import JSONResponse

router = APIRouter()
logger = logging.getLogger(__name__)

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å main.py)
UPLOAD_FOLDER = "uploaded_images"
# –ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ñ–∞–π–ª—ã –æ–±—Å–ª—É–∂–∏–≤–∞—é—Ç—Å—è (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å main.py)
# STATIC_BASE_PATH = "static/images" # –ù–∞–º –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω —ç—Ç–æ—Ç –ø—É—Ç—å –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
os.makedirs(UPLOAD_FOLDER, exist_ok=True) 
# --------------------

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
ALLOWED_EXTENSIONS = {'.png', '.jpg', '.jpeg', '.gif'}
MAX_FILE_SIZE = 10 * 1024 * 1024  # 10 MB

def check_file_extension(filename: str) -> Optional[str]:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ."""
    if '.' in filename:
        ext = filename.rsplit('.', 1)[1].lower()
        if f".{ext}" in ALLOWED_EXTENSIONS:
            return f".{ext}"
    return None


@router.post("/upload/images/", response_model=List[str], status_code=status.HTTP_201_CREATED)
async def upload_images(
    request: Request,
    files: List[UploadFile] = File(..., description="–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –ª–æ–∫–∞–ª—å–Ω–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤.
    –≠—Ç–∏ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î –∫–∞–∫ 'image_urls'.
    """
    uploaded_filenames = [] # üí° –ò–ó–ú–ï–ù–ï–ù–ò–ï: –¢–µ–ø–µ—Ä—å —Ö—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
    
    if not files:
        raise HTTPException(status_code=400, detail="–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ñ–∞–π–ª.")
        
    if len(files) > 5:
        raise HTTPException(
            status_code=status.HTTP_400_BAD_REQUEST, 
            detail="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–¥–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ ‚Äî 5."
        )

    for file in files:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ (—Ö–æ—Ç—è UploadFile –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–∏–º, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω–∞. 
        # –î–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏, –Ω–æ –∑–¥–µ—Å—å –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
        
        ext = check_file_extension(file.filename)
        if not ext:
            raise HTTPException(
                status_code=status.HTTP_400_BAD_REQUEST,
                detail=f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: {file.filename}. –†–∞–∑—Ä–µ—à–µ–Ω—ã: {', '.join(ALLOWED_EXTENSIONS)}"
            )

        # 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        unique_filename = f"{uuid.uuid4().hex}{ext}"
        file_path = os.path.join(UPLOAD_FOLDER, unique_filename)

        # 3. –ê–°–ò–ù–•–†–û–ù–ù–û —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –Ω–∞ –¥–∏—Å–∫
        try:
            # –í–∞–∂–Ω–æ: –°–±—Ä–∞—Å—ã–≤–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å —Ñ–∞–π–ª–∞ –≤ –Ω–∞—á–∞–ª–æ, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø—Ä–æ—á–∏—Ç–∞–Ω —Ä–∞–Ω–µ–µ
            await file.seek(0) 
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º aiofiles –¥–ª—è –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ–π –∑–∞–ø–∏—Å–∏
            async with aiofiles.open(file_path, "wb") as buffer:
                # –ß–∏—Ç–∞–µ–º –∏–∑ UploadFile –ø–æ —á–∞—Å—Ç—è–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
                while content := await file.read(1024 * 1024):  # –ß–∏—Ç–∞–µ–º —á–∞–Ω–∫–∞–º–∏ –ø–æ 1MB
                    await buffer.write(content)
            
            # 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –¢–û–õ–¨–ö–û –∏–º—è —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ë–î
            uploaded_filenames.append(unique_filename)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file.filename}: {e}")
            raise HTTPException(
                status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, 
                detail=f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª {file.filename}. –û—à–∏–±–∫–∞: {str(e)}"
            )
        finally:
            await file.close() # –ó–∞–∫—Ä—ã–≤–∞–µ–º UploadFile

    # üí° –í–û–ó–í–†–ê–©–ê–ï–ú –°–ü–ò–°–û–ö –ò–ú–ï–ù –§–ê–ô–õ–û–í
    return JSONResponse(content=uploaded_filenames, status_code=status.HTTP_201_CREATED)
